service: signage-auth

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, "dev"}
  region: ${opt:region, "eu-west-2"}
  memorySize: 512
  timeout: 60
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ecs:*
        - iam:PassRole
      Resource: "*"

resources:
  Resources:
    EcsServiceAuth:
      Type: AWS::ECS::Service
      DependsOn:
        - PathBasedRoutingRuleAuth
      Properties:
        TaskDefinition: !Ref TaskDefinitionAuth
        Cluster: !ImportValue signage-${self:provider.stage}-ECSClusterArn
        LaunchType: FARGATE
        DesiredCount: 1
        EnableExecuteCommand: true
        DeploymentConfiguration:
          MaximumPercent: 200
          MinimumHealthyPercent: 70
        NetworkConfiguration:
          AwsvpcConfiguration:
            AssignPublicIP: ENABLED
            Subnets:
              - subnet-0f6abc5ebc4cfef16
              - subnet-05a1ea4d551c754b0
              - subnet-044ed61b5459af050
            SecurityGroups:
              - sg-03004ef2ea81df0c0
        LoadBalancers:
          - ContainerName: "${self:service}-${self:provider.stage}-auth"
            ContainerPort: 9090
            TargetGroupArn: !Ref TargetGroupAuth

    TaskDefinitionAuth:
      Type: AWS::ECS::TaskDefinition
      Properties:
        Family: "${self:service}-auth"
        Cpu: 512
        Memory: 1024
        NetworkMode: awsvpc
        RequiresCompatibilities:
          - FARGATE
        ExecutionRoleArn: !ImportValue signage-${self:provider.stage}-ECSTaskExecutionRoleArn
        TaskRoleArn: !ImportValue signage-${self:provider.stage}-ECSTaskRoleArn
        ContainerDefinitions:
          - Name: "${self:service}-${self:provider.stage}-auth"
            Image: 180294218712.dkr.ecr.eu-west-2.amazonaws.com/auth:v${env:VERSION}
            PortMappings:
              - ContainerPort: 9090
                HostPort: 9090
                Protocol: tcp
            LogConfiguration:
              LogDriver: awslogs
              Options:
                awslogs-group: "${self:service}-auth"
                awslogs-region: !Ref AWS::Region
                awslogs-stream-prefix: "${self:service}-auth"

    TargetGroupAuth:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties:
        VpcId: "vpc-008f26e1beb018f6e"
        Port: 9090
        Protocol: HTTP
        Matcher:
          HttpCode: "200-499"
        HealthCheckIntervalSeconds: 30
        HealthCheckPath: "/"
        HealthCheckProtocol: "HTTP"
        HealthCheckTimeoutSeconds: 5
        HealthyThresholdCount: 10
        Name: "${self:service}-auth-tg"
        TargetType: ip

    PathBasedRoutingRuleAuth:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
          - Type: forward
            TargetGroupArn: !Ref TargetGroupAuth
        Conditions:
          - Field: path-pattern
            Values:
              - /auth
              - /auth/*
        # ListenerArn: !ImportValue signage-${self:provider.stage}-LoadBalancerListener
        # Priority: 2
        ListenerArn: !Ref LoadBalancerListener
        Priority: 1

    CloudWatchLogsGroupAuth:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: "${self:service}-auth"
        RetentionInDays: 30
